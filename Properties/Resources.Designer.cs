//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Monitoring.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Monitoring.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Collections.Generic;
        ///using System.Management;
        ///using System.Net;
        ///using System.Net.Sockets;
        ///using System.Text;
        ///using System.Threading;
        ///
        ///namespace ConsoleApp4
        ///{
        ///
        ///
        ///    class Program
        ///    {
        ///        [System.Runtime.InteropServices.DllImport(&quot;user32.dll&quot;)]
        ///        static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);
        ///
        ///        static void Main(string[] args)
        ///        {
        ///            var currentProcess = System.Diagnostics.Process.GetCurrentProcess();
        ///
        ///            /*In [остаток строки не уместился]&quot;;.
        /// </summary>
        public static string part1 {
            get {
                return ResourceManager.GetString("part1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на using System;
        ///using System.Collections.Generic;
        ///using System.Management;
        ///using System.Net;
        ///using System.Net.Sockets;
        ///using System.Text;
        ///using System.Threading;
        ///
        ///namespace ConsoleApp2
        ///{
        ///
        ///
        ///    class Program
        ///    {
        ///        [System.Runtime.InteropServices.DllImport(&quot;user32.dll&quot;)]
        ///        static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);
        ///
        ///        static void Main(string[] args)
        ///        {
        ///            /*var currentProcess = System.Diagnostics.Process.GetCurrentProcess();
        ///
        ///            In [остаток строки не уместился]&quot;;.
        /// </summary>
        public static string part2 {
            get {
                return ResourceManager.GetString("part2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &quot;);
        ///                    IPEndPoint ipEndPoint = new IPEndPoint(ipAddr, port);
        ///
        ///                    TcpClient tcpClient = new TcpClient();
        ///                    tcpClient.Connect(ipEndPoint);
        ///
        ///                    NetworkStream netStream = tcpClient.GetStream();
        ///
        ///                    string message = /*System.Environment.UserName*/ System.Net.Dns.GetHostName()
        /// + &quot;\n&quot; +
        ///                        OutputResult(&quot;Имя процессора:&quot;, GetHardwareInfo(&quot;Win32_Processor&quot;, &quot;Name&quot;)) + &quot;\n&quot; +
        ///                         [остаток строки не уместился]&quot;;.
        /// </summary>
        public static string part3 {
            get {
                return ResourceManager.GetString("part3", resourceCulture);
            }
        }
    }
}
